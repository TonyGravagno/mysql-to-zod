["import { type RefinementCtx, z } from \"zod\";\nexport const globalSchema = {\n","Timestamp: z.date(),\n","maxLength: (arg: any, limit: number, ctx?: RefinementCtx): boolean => {\nif (arg?.toString()?.length > limit) {\nif (ctx)\nctx.addIssue({\ncode: z.ZodIssueCode.too_big,\nmaximum: limit,\ntype: typeof arg === \"number\" ? \"number\" : \"string\",\ninclusive: true,\nmessage: `Too many characters. Maximum ${limit}.`,\n});\nreturn false;\n}\nreturn true;\n","},\n","};\n"]